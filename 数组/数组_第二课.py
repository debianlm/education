'''
Created on 2017年3月17日

@author: bufan
'''
# 假设  第一天工资 1粒米，第二天给我前一天的2倍， 请问工作一个月30天后，收到了多少元工资
# 已知 4元 可以购买1 1公斤大米，  而每一公斤大米含有 50000 颗米粒

# 第二种方法，带有长度的数组
# 定义一个变量wage，然后初始化为 数组，数组从0开始计算，因此 
# 同时把数组初始化为长度为 30
wage=[0 for x in range(30)]

# 30天总收入
total_wage=0

# 由于第一天之前并没有前一天，所以第一天的工资并非是前一天的2倍，所以这个第一天我单独赋值
wage[0]=1;

# 开始启动一个循环，这个循环执行29次，从1开始，到30-1  结束，表示第二天开始到第30天
for i in range(1,30):
    # 这句话的意思是，从第二天开始，每天的工资是前天的2倍
    wage[i]=wage[i-1]*2    

# 程序直行道这儿已经出了循环,下面我们要统计所有30天一共赚了多少颗米了
#total_wage=sum(wage)
for i in range(0,30):
    total_wage = total_wage+wage[i]

print("第二种方法:一共赚了%d颗大米，相当于%d元人民币"%(total_wage,total_wage/50000*4))


# 第三种方法，循环法，不设置数组长度法

# 定义了一个数组队列，长度为0
wage=[ ]

# 30天总收入
total_wage=0

for i in range(30):
    # 给数组队列尾部添加一个数值，当数组为空时候添加的就是第一天的工资，依次类推
    if i==0:
        # 如果是第一天，那么由于队列为空，所以不存在“前一天”也就不存在前一天的2倍，所以我们直接添加一个 1
        wage.append(1)
    else:
        # 如果不是第一天了，那么就意味着队列中存在着“前一天”的值，在数组队列中 ［－1］表示引用最后一个值，对于本题来说相当于“上一天” 
        wage.append(wage[-1]*2)

# 程序直行道这儿已经出了循环,下面我们要统计所有30天一共赚了多少颗米了
#total_wage=sum(wage)
for i in range(0,30):
    total_wage = total_wage+wage[i]

print("第二种方法:一共赚了%d颗大米，相当于%s元人民币"%(total_wage,str(total_wage/50000*4)))




'''
问题1: 为什么 方法二中，不直接 使用 比如 wage[2]=wage[1]*2 进行操作
问题2: [-1] 表示什么？
问题3: 仔细观察3种方法的print语句的差别，说说为什么？
问题4: 如果计算365天的收入，上述3种方法的差别是啥？ 你会修改然后得到结果吗？
'''

